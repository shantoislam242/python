{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPjxcqxNVE2YHf4S5HH+C7Y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Dictionary"],"metadata":{"id":"0M5Sc_lM4BdZ"}},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0jbm0wNn26k3","executionInfo":{"status":"ok","timestamp":1732531222492,"user_tz":-360,"elapsed":486,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"5069c4c3-a8f9-4eb5-f89a-f2fa0b780fd6"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'abc': 123, 'xyz': {1: 23, 2: 56}, 3: [2, 4, 5]}\n","56\n","5\n","abc 123\n","xyz {1: 23, 2: 56}\n","3 [2, 4, 5]\n","123\n","{1: 23, 2: 56}\n","[2, 4, 5]\n","abc 123\n","xyz {1: 23, 2: 56}\n","3 [2, 4, 5]\n"]}],"source":["dict_ = dict()\n","dict_['abc'] = 123\n","dict_['xyz'] = {1:23, 2:56}\n","dict_[3] = [2,4,5]\n","\n","print(dict_)\n","print(dict_['xyz'][2])\n","print(dict_[3][2])\n","\n","for key in dict_:\n","    print(key, dict_[key])\n","for value in dict_.values():\n","    print(value)\n","for key, value in dict_.items():\n","    print(key, value)"]},{"cell_type":"markdown","source":["# Excercise\n","\n","1. Create and Access Elements: Create a dictionary with three key-value pairs: {'name': 'Alice', 'age': 25, 'city': 'New York'}.\n","Print the value of the key 'name'.\n","\n","2. Add and Update: Add a new key-value pair 'job': 'Engineer' to the dictionary.\n","Update the 'city' to 'San Francisco'.\n","\n","3. Check Existence: Write a program to check if the key 'age' exists in the dictionary and print a message accordingly."],"metadata":{"id":"dwXkirUo4gzV"}},{"cell_type":"code","source":["# ex-1\n","info = {'name': 'Alice', 'age': 25, 'city': 'New York'}\n","print(info['name'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lHP7WPhk4rf0","executionInfo":{"status":"ok","timestamp":1732531463033,"user_tz":-360,"elapsed":518,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"10b8879a-f12b-4252-c12c-4399bee7b86f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Alice\n"]}]},{"cell_type":"code","source":["# ex-2\n","info['job'] = 'Engineer'\n","info['city'] = 'San Francisco'\n","print(info)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yuZm-Ee67EQ8","executionInfo":{"status":"ok","timestamp":1732531535621,"user_tz":-360,"elapsed":569,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"1689c478-a130-487e-f5ad-ef4fcdc878cc"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'Alice', 'age': 25, 'city': 'San Francisco', 'job': 'Engineer'}\n"]}]},{"cell_type":"code","source":["# ex-3\n","if 'age' in info:\n","    print('age exists')\n","else:\n","    print('age does not exist')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QJ30RaJ_7U3E","executionInfo":{"status":"ok","timestamp":1732531578330,"user_tz":-360,"elapsed":8,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"bfda0d85-65ec-4dfd-adcc-0020a196cd1d"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["age exists\n"]}]},{"cell_type":"code","source":["from random import randint\n","print(randint(1,10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v5_Nh5jz7hPu","executionInfo":{"status":"ok","timestamp":1732532078976,"user_tz":-360,"elapsed":510,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"41448061-df36-4de0-d9ee-845b1fe15503"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["4\n"]}]},{"cell_type":"markdown","source":["# dictionary faster then list"],"metadata":{"id":"sKNPFgXNAUMi"}},{"cell_type":"code","source":["from random import randint\n","import time\n","\n","listLen = 1000000\n","list_of_numbers = listLen*[0]\n","dict_of_numbers = dict()\n","for i in range(listLen):\n","    n = randint(1000000, 9999999)\n","    list_of_numbers[i] = n\n","    dict_of_numbers[n] = i\n","\n","\n","73452745 in list_of_numbers\n","start = time.time()\n","print(47385687 in list_of_numbers)\n","end = time.time()\n","print(end-start)\n","\n","47385687 in dict_of_numbers\n","start = time.time()\n","print(47385687 in dict_of_numbers)\n","end = time.time()\n","print(end-start)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OMS-aTzm9on4","executionInfo":{"status":"ok","timestamp":1732532833040,"user_tz":-360,"elapsed":2083,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"35112fe5-770c-4c91-d279-c8a8c45d55f9"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","0.01448202133178711\n","False\n","0.00010752677917480469\n"]}]},{"cell_type":"code","source":["# Problem 1 : Write a Python Program to Get 5 Student Name with their Marks and Display Student Name and their Marks in Key Value Form.\n","students = {\n","    \"Hasibur\": 80,\n","    \"Jamil\": 95,\n","    \"Ashik\": 75,\n","    \"Hasan\": 70,\n","    \"Kamal\": 60\n","}\n","\n","for name, mark in students.items():\n","    print(f\"{name}: {mark}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qek3_DAWAZCn","executionInfo":{"status":"ok","timestamp":1732533367690,"user_tz":-360,"elapsed":521,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"beb53dfc-aca4-45f1-b227-17703e716288"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Hasibur: 80\n","Jamil: 95\n","Ashik: 75\n","Hasan: 70\n","Kamal: 60\n"]}]},{"cell_type":"code","source":["# Problem 2 : Write a Python Program to Get 5 Digital Product and their Price. Display Total Price of the Products.\n","products ={\n","    \"Laptop\": 20000,\n","    \"Smart Phone\": 12000,\n","    \"Watch\": 500,\n","    \"Tab\": 8000,\n","    \"TV\": 25000\n","}\n","\n","sum = 0\n","for value in products.values():\n","  sum +=value\n","\n","print(sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bk-ZcmuXA96i","executionInfo":{"status":"ok","timestamp":1732533526834,"user_tz":-360,"elapsed":553,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"4e0bf307-fa6d-4783-96bd-9e1ee873bdee"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["65500\n"]}]},{"cell_type":"code","source":["list_of_words = 'Green University of Bangladesh. Green'\n","word_counts = {}\n","\n","for word in list_of_words.split(' '):\n","    if word in word_counts:\n","        word_counts[word] += 1\n","    else:\n","        word_counts[word] = 1\n","\n","print(word_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ee2ChA3JDDU4","executionInfo":{"status":"ok","timestamp":1732533872622,"user_tz":-360,"elapsed":651,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"8863b51f-a8d0-4f32-a27b-433e0d52211b"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Green': 2, 'University': 1, 'of': 1, 'Bangladesh.': 1}\n"]}]},{"cell_type":"markdown","source":["# Comprehension"],"metadata":{"id":"F9rsX3PxNwti"}},{"cell_type":"code","source":["dict = {'a':4, 'b':1, 'c':6, 'd':2, 'e': 3}\n","new_dict = {k:v*5 for (k,v) in dict.items()}\n","print(new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VDjMer02N0Q7","executionInfo":{"status":"ok","timestamp":1732536541145,"user_tz":-360,"elapsed":511,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"f0cb938f-58c4-4056-f759-734986daf4d4"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 20, 'b': 5, 'c': 30, 'd': 10, 'e': 15}\n"]}]},{"cell_type":"code","source":["new_dict = {k:v for (k,v) in dict.items() if 'a' in k}\n","print(new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bKZHJ55lOcWj","executionInfo":{"status":"ok","timestamp":1732536635099,"user_tz":-360,"elapsed":501,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"f4f880b0-78b0-4e61-9d8a-2f73321daf8c"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 4}\n"]}]},{"cell_type":"code","source":["new_dict = {k:('even' if v%2 == 0 else 'odd') for (k,v) in dict.items()}\n","print(new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nM1DCaG9Oxv0","executionInfo":{"status":"ok","timestamp":1732536734715,"user_tz":-360,"elapsed":563,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"e870a702-65d3-4895-faac-8f3c937f3868"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 'even', 'b': 'odd', 'c': 'even', 'd': 'even', 'e': 'odd'}\n"]}]},{"cell_type":"markdown","source":["1. Problem 1 : Write a Python Program to Create a Dictionary from a List which Displays Length of Each Word as Value.\n","2. Problem 2 : Write a Python Program to Create a Dictionary from a List which Displays Length of those Word which Contain Greater than 5 Character as Value."],"metadata":{"id":"9ViPRGYTPXQ1"}},{"cell_type":"code","source":["# problem 1\n","list_of_words = ['Green', 'University', 'of', 'Bangladesh']\n","new_dict = {word:len(word) for word in list_of_words}\n","print(new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DqyiPJxDPJ7T","executionInfo":{"status":"ok","timestamp":1732536976154,"user_tz":-360,"elapsed":625,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"e1524da0-c150-4eb2-99a1-c08149d326b8"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Green': 5, 'University': 10, 'of': 2, 'Bangladesh': 10}\n"]}]},{"cell_type":"code","source":["# problem 2\n","new_dict = {word:len(word) for word in list_of_words if len(word) > 5}\n","print(new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pP1w-xc4QHaN","executionInfo":{"status":"ok","timestamp":1732537023201,"user_tz":-360,"elapsed":549,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"37ed27ce-743b-4f8c-90c6-2d3673e15306"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["{'University': 10, 'Bangladesh': 10}\n"]}]},{"cell_type":"markdown","source":["# Excercise Based on dictionary methods\n","1. Exercise 1: Write a Python Program to Get Color Name and its Code, and Display all the Color Name in Uppercase with their Code.\n","2. Exercise 2: Write a Python Program to Create a Numeric Dictionary which Displays only those Keys which have Even Value.\n","3. Exercise 3: Write a Python Program to Create a Dictionary from List which multiplies the values with 2 using Dictionary comprehension.\n","4. Exercise 4: Write a Python Program to Display Min and Max Value from a Dictionary Value.\n","5. Exercise 5: Write a Python Program to Check Specific Key, whether that Key Exist in Dictionary or Not."],"metadata":{"id":"EZEejFd9TMBg"}},{"cell_type":"code","source":["# ex-1\n","color_dict = {\n","    'Red': '#FF0000',\n","    'Green': '#00FF00',\n","    'Black': '#000000',\n","    'White': '#FFFFFF'\n","}\n","colors_list = list(color_dict.keys())\n","\n","print([x.upper() for x in colors_list])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R1_wwukvR7q6","executionInfo":{"status":"ok","timestamp":1732538360615,"user_tz":-360,"elapsed":626,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"4d6b3163-8b30-47d0-bce9-804b94fcd787"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["['RED', 'GREEN', 'BLACK', 'WHITE']\n"]}]},{"cell_type":"code","source":["# ex-2\n","dict = {'a':4, 'b':1, 'c':6, 'd':2, 'e': 3}\n","new_dict = {k:v for (k,v) in dict.items() if v%2 == 0}\n","print(new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H0JWDiR9VYgr","executionInfo":{"status":"ok","timestamp":1732538609522,"user_tz":-360,"elapsed":522,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"e5443802-f40e-4486-f970-680adddac6db"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 4, 'c': 6, 'd': 2}\n"]}]},{"cell_type":"code","source":["# ex-3\n","new_dict = {k:v*2 for (k,v) in dict.items()}\n","print(new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"052lRz1aWT9W","executionInfo":{"status":"ok","timestamp":1732538664832,"user_tz":-360,"elapsed":716,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"c8317c12-dd54-48ef-e6ee-6575e5c6e302"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 8, 'b': 2, 'c': 12, 'd': 4, 'e': 6}\n"]}]},{"cell_type":"code","source":["# ex-4\n","print(min(dict.values()))\n","print(max(dict.values()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SrTmv8_tWhdL","executionInfo":{"status":"ok","timestamp":1732538691875,"user_tz":-360,"elapsed":878,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"05484732-190d-4437-c8aa-9e48c9734de1"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","6\n"]}]},{"cell_type":"code","source":["# ex-5\n","print('a' in dict)\n","print('f' in dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PU0DSD0PXT_y","executionInfo":{"status":"ok","timestamp":1732538895755,"user_tz":-360,"elapsed":523,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"a657cf9f-d211-4be8-b736-59820db4dca6"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n"]}]},{"cell_type":"code","source":["# 7. Nested Dictionary Manipulation: Create a nested dictionary to store student information:\n","# students = {\n","#     'Alice': {'math': 85, 'science': 92},\n","#     'Bob': {'math': 78, 'science': 89},\n","#     'Charlie': {'math': 95, 'science': 85}\n","# }\n","# Calculate the average score for each student and print it.\n","\n","students = {\n","    'Alice': {'math': 85, 'science': 92},\n","    'Bob': {'math': 78, 'science': 89},\n","    'Charlie': {'math': 95, 'science': 85},\n","}\n","\n","for name, marks in students.items():\n","    print(f\"{name}: {sum(marks.values())/len(marks)}\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"WSLDPFOtYckb","executionInfo":{"status":"error","timestamp":1732539464178,"user_tz":-360,"elapsed":552,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"c637e2f0-4c12-47ed-824d-94bc19843c34"},"execution_count":36,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"'int' object is not callable","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-36-90935bf9c70e>\u001b[0m in \u001b[0;36m<cell line: 15>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmarks\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mstudents\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{name}: {str(sum(marks.values())/len(marks))}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'int' object is not callable"]}]}]}