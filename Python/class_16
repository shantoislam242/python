{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOuVYh8cKvTAoXNTCGxEuJu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Pandas"],"metadata":{"id":"KraS06WkVi8i"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"-QIsIEv3e668","executionInfo":{"status":"ok","timestamp":1738580703949,"user_tz":-360,"elapsed":1302,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QF2ezvd_VeyQ","executionInfo":{"status":"ok","timestamp":1738580727938,"user_tz":-360,"elapsed":611,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"c0c0d8dc-b91b-4230-f1c7-b62db4e2c0b5"},"outputs":[{"output_type":"stream","name":"stdout","text":["[10 20 30 40]\n"]}],"source":["# Problem 1: Create a 1D NumPy array from a Python list [10,20,30,40]. Print the array.\n","lst = [10,20,30,40]\n","arr = np.array(lst)\n","print(arr)"]},{"cell_type":"code","source":["# Problem 2: Create a 2D NumPy array from a Python list [[1,2],[3,4],[5,6]] and print it.\n","lst = [[1,2],[3,4],[5,6]]\n","arr = np.array(lst)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iCQF5iJGfKTb","executionInfo":{"status":"ok","timestamp":1738580800015,"user_tz":-360,"elapsed":476,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"c7c8b65e-8c34-4b44-8d45-9eb5cea454ee"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2]\n"," [3 4]\n"," [5 6]]\n"]}]},{"cell_type":"code","source":["# Problem 3: Create a 3x3 matrix of zeros using NumPy. Print the matrix.\n","arr = np.zeros((3,3))\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZwE7ASNcffNI","executionInfo":{"status":"ok","timestamp":1738580872241,"user_tz":-360,"elapsed":517,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"8c697004-d8d0-4a32-9e6b-de9f45bd2d08"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 0. 0.]\n"," [0. 0. 0.]\n"," [0. 0. 0.]]\n"]}]},{"cell_type":"code","source":["# Problem 4: Use np.arange() to create a NumPy array with values from 10 to 100, with a step of 10. Print the array.\n","arr = np.arange(10,101,10)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o8goL_eIft0d","executionInfo":{"status":"ok","timestamp":1738580961405,"user_tz":-360,"elapsed":567,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"e2c922c4-bdad-4f6d-aae4-d0aac9ee97cf"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 10  20  30  40  50  60  70  80  90 100]\n"]}]},{"cell_type":"code","source":["# Problem 5: Create a NumPy array filled with ones, with shape (4,2). Print the array.\n","arr = np.ones((4,2))\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sD75_x-vgDMS","executionInfo":{"status":"ok","timestamp":1738581369634,"user_tz":-360,"elapsed":832,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"7856642f-717d-4a66-e2a0-b5fec7833140"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 1.]\n"," [1. 1.]\n"," [1. 1.]\n"," [1. 1.]]\n"]}]},{"cell_type":"code","source":["# Problem 6: Create a 1D NumPy array of 10 evenly spaced values between 1 and 100 using np.linspace(). Print the array.\n","arr = np.linspace(1,100,10)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sXoRp9J0hv7i","executionInfo":{"status":"ok","timestamp":1738581541449,"user_tz":-360,"elapsed":585,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"8d5413b7-bb5d-4043-f470-cfb462faae51"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["[  1.  12.  23.  34.  45.  56.  67.  78.  89. 100.]\n"]}]},{"cell_type":"code","source":["# Problem 7: Convert the Python list [3,6,9] to a NumPy array and perform element-wise multiplication by 3. Print the result.\n","lst = [3,6,9]\n","arr = np.array(lst)\n","print(arr*3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ByXTvmm_iRDF","executionInfo":{"status":"ok","timestamp":1738581609236,"user_tz":-360,"elapsed":625,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"892651b9-63e8-426f-e6e6-51147c21313c"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 9 18 27]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"xYlfvyPJjnW4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Problem 8: Create a 2D array a = [[1,2],[3,4]] and access the element at row 1, column 0. Print the element.\n","arr = np.array([[1,2],[3,4]])\n","print(arr[1,0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Scx5SkjIikiY","executionInfo":{"status":"ok","timestamp":1738581683746,"user_tz":-360,"elapsed":449,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"a9576d0a-c269-4bfb-ca3a-bfc63d39a2a6"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"code","source":["# Problem 9: Slice the array a = [2,4,6,8,10] to extract the first three elements. Print the result.\n","arr = np.array([2,4,6,8,10])\n","print(arr[:3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JP0ymk7si1kl","executionInfo":{"status":"ok","timestamp":1738581723288,"user_tz":-360,"elapsed":1483,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"2fd0a078-c643-4d6f-8201-fb65fab28ab2"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 4 6]\n"]}]},{"cell_type":"code","source":["# Problem 10: Create a 1D array of size 10 filled with random integers between 1 and 100 using np.random.randint(). Print the array.\n","arr = np.random.randint(1,101,10)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rfWLdnW7i1YZ","executionInfo":{"status":"ok","timestamp":1738581763539,"user_tz":-360,"elapsed":596,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"0350553a-3472-45cb-eb95-bc41f7c1fe9d"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["[24 26 49 20 70  2 74 99 90 36]\n"]}]},{"cell_type":"markdown","source":["# NumPy second part"],"metadata":{"id":"dNp_OlCGjG_F"}},{"cell_type":"code","source":["# Element-wise Operations\n","a = np.array([1, 2, 3])\n","b = np.array([4, 5, 6])\n","c = a + b\n","print(c)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4q-BaZoRjNCN","executionInfo":{"status":"ok","timestamp":1738581956083,"user_tz":-360,"elapsed":464,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"11608b62-0a31-42ca-f2a5-0ebfed0b55d0"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 7 9]\n"]}]},{"cell_type":"code","source":["# Aggregate Functions\n","a = np.array([1, 2, 3, 4, 5])\n","mean = np.mean(a)\n","print(mean)\n","sum = np.sum(a)\n","print(sum)\n","min = np.min(a)\n","print(min)\n","max = np.max(a)\n","print(max)\n","std = np.std(a)\n","print(std)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SV49m2Cmj2D6","executionInfo":{"status":"ok","timestamp":1738582042465,"user_tz":-360,"elapsed":608,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"9fd841ee-85d5-42c7-e193-5c4f43020f13"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["3.0\n","15\n","1\n","5\n","1.4142135623730951\n"]}]},{"cell_type":"code","source":["# Matrix multiplication\n","a = np.array([[1, 2], [3, 4]])\n","b = np.array([[5, 6], [7, 8]])\n","c = np.dot(a, b)\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UcniVc63kcHZ","executionInfo":{"status":"ok","timestamp":1738582136395,"user_tz":-360,"elapsed":603,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"54ef9a5d-9e41-46cb-ac00-6ea730b73f03"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["[[19 22]\n"," [43 50]]\n"]}]},{"cell_type":"code","source":["# broadcasting\n","a = np.array([1, 2, 3])\n","b = 2\n","c = a + b\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ad5fEd5QlcC4","executionInfo":{"status":"ok","timestamp":1738582416693,"user_tz":-360,"elapsed":671,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"09a6e815-1ec5-43d7-cd59-91b8bfd4b3c0"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 4 5]\n"]}]},{"cell_type":"code","source":["a = np.array([[1], [2], [3]])  # 3x1\n","b = np.array([4, 5, 6])  # 1x3\n","c = a + b\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-TUROu8Nlm35","executionInfo":{"status":"ok","timestamp":1738582737252,"user_tz":-360,"elapsed":469,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"df12158d-ef11-4178-d2f9-29f64763f158"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5 6 7]\n"," [6 7 8]\n"," [7 8 9]]\n"]}]},{"cell_type":"code","source":["# NORMALIZATION\n","arr = np.array([1,2,4,6,8])\n","arr = (arr - np.min(arr)) / (np.max(arr) - np.min(arr))\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jDd4x17YpP5t","executionInfo":{"status":"ok","timestamp":1738583461984,"user_tz":-360,"elapsed":483,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"72b8e984-36c7-42c2-f959-3dd2ba5781b9"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.         0.14285714 0.42857143 0.71428571 1.        ]\n"]}]},{"cell_type":"code","source":["# Random Sampling\n"],"metadata":{"id":"Ql6tHh8pu8Cx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Memory Management and Views\n","a = np.array([1,2,3,4,5])\n","b = a[2:4]\n","print(b)\n","b[0] = 100\n","print(b)\n","print(a)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eYsVAl7Vxl-t","executionInfo":{"status":"ok","timestamp":1738585709155,"user_tz":-360,"elapsed":491,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"96c30457-3cb5-48eb-c276-2035fffdc694"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 4]\n","[100   4]\n","[  1   2 100   4   5]\n"]}]},{"cell_type":"code","source":["# linear algebra problem solve\n","# 3x+y=9, x+2y=8, Ax=b\n","A = np.array([[3,1],[1,2]])\n","b = np.array([9,8])\n","x = np.linalg.solve(A,b)\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XzZ-_yENyaMp","executionInfo":{"status":"ok","timestamp":1738586034047,"user_tz":-360,"elapsed":447,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"9707962f-59a6-40ab-9437-14614580fa94"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["[2. 3.]\n"]}]},{"cell_type":"code","source":["# Problem 1: Create two NumPy arrays, a = [1,2,3] and b = [4,5,6]. Perform element-wise addition of them and print the result.\n","a = np.array([1,2,3])\n","b = np.array([4,5,6])\n","print(a+b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dptKraP4zurf","executionInfo":{"status":"ok","timestamp":1738586224143,"user_tz":-360,"elapsed":525,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"4d5e89f9-3639-488e-bff2-e20f882da934"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 7 9]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"MKJ-B5wk0LGW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Problem 2: Create and print a NumPy array of shape (3, 3) with random values between 0 and 1 using np.random.rand()\n","arr = np.random.rand(3,3)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zqjsHvaz0Kbx","executionInfo":{"status":"ok","timestamp":1738586310380,"user_tz":-360,"elapsed":537,"user":{"displayName":"Md. Hasibur Rahman","userId":"10499204681937266161"}},"outputId":"b61deb6a-4ef8-4cd5-f1d2-14e0fbbb52ff"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.19271662 0.25077928 0.73843193]\n"," [0.3854383  0.49616576 0.10386537]\n"," [0.30355955 0.94466045 0.02818574]]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"OfhxqFu50d-M"},"execution_count":null,"outputs":[]}]}